<div class="panel">
    <div class="page-content settings container-fluid">
        <div id="media_picker_{{ $row->field }}">
        <button type="button" @click="openMediaPicker">open</button>
        <input type="text" v-model="options.basePath">
        <input type="hidden" name="{{ $row->field }}" :value="{{ $content }}">
        </div>
    </div>
</div>
@push('javascript')
<script>
var media_picker_{{ $row->field }} = new Vue({
    el: '#media_picker_{{ $row->field }}',
    data(){
        return{
            options:{
                basePath:{!! printString($options->base_path ?? '/'.$dataType->slug.'/') !!},
                filename:{{ $options->rename ?? 'null' }},
                allowMultiSelect: {{ printBool(isset($options->max) && $options->max > 1 ? true : false) }},
                maxSelectedFiles: {{ printInt($options->max ?? 0) }},
                minSelectedFiles: {{ printInt($options->min ?? 0) }},
                showFolders: {{ printBool($options->show_folders ?? false) }},
                showToolbar: {{ printBool($options->show_toolbar ?? true) }},
                allowUpload: {{ printBool($options->allow_upload ?? true) }},
                allowMove: {{ printBool($options->allow_move ?? false) }},
                allowDelete: {{ printBool($options->allow_delete ?? true) }},
                allowCreateFolder: {{ printBool($options->allow_create_folder ?? true) }},
                allowRename: {{ printBool($options->allow_rename ?? true) }},
                allowCrop: {{ printBool($options->allow_crop ?? true) }},
                allowedTypes: {{ printArray(isset($options->allowed) && is_array($options->allowed) ? $options->allowed : []) }},
                preSelect: false,
                expanded: {{ printBool($options->expanded ?? false) }},
                showExpandButton: true,
                element: 'input[name="{{ $row->field }}"]',
                details: {!! printObject($options ?? new class{}) !!},
            },
            content: {!! $content !!},
        }
    },
    methods:{
        openMediaPicker(){
            vueModals.$refs.dialogMediaPicker.init(this.options,this.content);
            // vueModals.$refs.dialogMediaPicker.setOptions(this.options);
        }
    }
});
</script>
@endpush
    